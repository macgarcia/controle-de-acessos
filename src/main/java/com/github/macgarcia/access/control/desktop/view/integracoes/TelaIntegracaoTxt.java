package com.github.macgarcia.access.control.desktop.view.integracoes;

import com.github.macgarcia.access.control.desktop.configuration.FactoryMensagem;
import com.github.macgarcia.access.control.desktop.service.TelaIntegracaoTxtService;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.util.List;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author macgarcia
 */
public class TelaIntegracaoTxt extends javax.swing.JInternalFrame {
    
    private List<String> linhasDoArquivo;
    private final TelaIntegracaoTxtService service;

    /**
     * Creates new form TelaIntegracaoTxt
     */
    public TelaIntegracaoTxt() {
        initComponents();
        this.service = new TelaIntegracaoTxtService();
        configurarJanela();
        configurarComponentes();
        acoesDosBotoes();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        txtCaminhoArquivo = new javax.swing.JTextField();
        btnProcurarArquivo = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel1.setText("Caminho do arquivo");

        btnProcurarArquivo.setText("Procurar");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(txtCaminhoArquivo, javax.swing.GroupLayout.PREFERRED_SIZE, 297, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnProcurarArquivo)))
                .addContainerGap(10, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCaminhoArquivo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnProcurarArquivo))
                .addContainerGap(223, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnProcurarArquivo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JTextField txtCaminhoArquivo;
    // End of variables declaration//GEN-END:variables

    private void configurarJanela() {
        setTitle("Importação de documentos");
        setResizable(false);
    }

    private void configurarComponentes() {
        this.txtCaminhoArquivo.setEditable(false);
    }

    private void acoesDosBotoes() {
        this.btnProcurarArquivo.addActionListener(ev -> {
            this.construirLancador();
            try {
                lerArquivoSelecionado();
                service.processarDadosDoArquivo(linhasDoArquivo);
            } catch (IOException e) {
                FactoryMensagem.mensagemErro("Erro ao ler o arquivo.");
            }
        });
    }

    private void construirLancador() {
        final JFileChooser lancador = new JFileChooser();
        FileNameExtensionFilter txtFilter = new FileNameExtensionFilter("Arquivos de Texto (*.txt)", "txt");
        lancador.addChoosableFileFilter(txtFilter);
        lancador.setFileFilter(txtFilter);

        int result = lancador.showOpenDialog(null);
        if (result == JFileChooser.APPROVE_OPTION) {
            java.io.File selectedFile = lancador.getSelectedFile();
            this.txtCaminhoArquivo.setText(selectedFile.getPath());
        }
    }
    
    private void lerArquivoSelecionado() throws IOException {
        Path caminhoDoArquivo = Paths.get(this.txtCaminhoArquivo.getText());
        this.linhasDoArquivo = Files.readAllLines(caminhoDoArquivo);
    }

}
