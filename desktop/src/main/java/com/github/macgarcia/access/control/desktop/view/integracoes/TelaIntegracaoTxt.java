package com.github.macgarcia.access.control.desktop.view.integracoes;

import com.github.macgarcia.access.control.desktop.component.ManipulacaoDeArquivoTxt;
import com.github.macgarcia.access.control.desktop.configuration.Configuracao;
import com.github.macgarcia.access.control.desktop.configuration.FactoryLog;
import com.github.macgarcia.access.control.desktop.configuration.FactoryMensagem;
import com.github.macgarcia.access.control.desktop.enuns.AcaoParaArquivo;
import com.github.macgarcia.access.control.desktop.service.TelaIntegracaoTxtService;
import java.io.IOException;
import java.util.List;
import java.util.logging.Logger;

/**
 *
 * @author macgarcia
 */
public class TelaIntegracaoTxt extends javax.swing.JInternalFrame {
    
    private static final Logger LOGGER = FactoryLog.getLog();

    private List<String> linhasDoArquivo;
    private final TelaIntegracaoTxtService service;

    /**
     * Creates new form TelaIntegracaoTxt
     */
    public TelaIntegracaoTxt() {
        initComponents();
        this.service = new TelaIntegracaoTxtService();
        configurarJanela();
        configurarComponentes();
        acoesDosBotoes();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        txtCaminhoArquivo = new javax.swing.JTextField();
        btnProcurarArquivo = new javax.swing.JButton();
        barraProgresso = new javax.swing.JProgressBar();
        btnIniciar = new javax.swing.JButton();
        lblProgresso = new javax.swing.JLabel();

        setClosable(true);
        setIconifiable(true);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel1.setText("Caminho do arquivo");

        btnProcurarArquivo.setText("Procurar");

        btnIniciar.setText("Iniciar");

        lblProgresso.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblProgresso.setText("jLabel2");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(txtCaminhoArquivo, javax.swing.GroupLayout.PREFERRED_SIZE, 297, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnProcurarArquivo))
                    .addComponent(barraProgresso, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnIniciar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblProgresso, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(10, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCaminhoArquivo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnProcurarArquivo))
                .addGap(27, 27, 27)
                .addComponent(lblProgresso)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(barraProgresso, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33)
                .addComponent(btnIniciar)
                .addContainerGap(8, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JProgressBar barraProgresso;
    private javax.swing.JButton btnIniciar;
    private javax.swing.JButton btnProcurarArquivo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel lblProgresso;
    private javax.swing.JTextField txtCaminhoArquivo;
    // End of variables declaration//GEN-END:variables

    private void configurarJanela() {
        setTitle("Importação de dados via Txt");
        setResizable(false);
    }

    private void configurarComponentes() {
        this.txtCaminhoArquivo.setEditable(false);
        this.lblProgresso.setText("Aguardando arquivo...");
        this.btnIniciar.setEnabled(false);
    }

    private void acoesDosBotoes() {
        
        this.btnProcurarArquivo.addActionListener(ev -> {
            Configuracao.construirLancador(true, txtCaminhoArquivo, AcaoParaArquivo.ABRIR);
            if (!txtCaminhoArquivo.getText().isEmpty()) {
                this.lblProgresso.setText("Arquivo selecionado.");
                this.btnIniciar.setEnabled(true);
            }
        });

        this.btnIniciar.addActionListener(ev -> {
            LOGGER.info("Iniciando processo de integração...");
            this.barraProgresso.setIndeterminate(true);
            
            this.lblProgresso.setText("Leitura do arquivo...");
            try {
                lerArquivoSelecionado();
            } catch (IOException e) {
                FactoryMensagem.mensagemErro("Erro ao ler o arquivo.");
                LOGGER.severe(String.format("Erro ao ler o arquivo. Causa: [%s]", e.getCause()));
                dispose();
                return;
            }
            
            LOGGER.info("Iniciando processo de leitura do arquivo...");
            this.lblProgresso.setText("Processando o arquivo...");
            try {
                service.processarDadosDoArquivo(linhasDoArquivo);
            } catch (Exception e) {
                FactoryMensagem.mensagemErro("Erro ao processar o arquivo.");
                LOGGER.severe(String.format("Erro ao processar o arquivo. Causa: [%s]", e.getCause()));
                dispose();
                return;
            }
            
            this.lblProgresso.setText("Salvando dados...");
            service.salvarNotas();
            
            this.lblProgresso.setText("Integração finalizada.");
            this.barraProgresso.setIndeterminate(false);
            LOGGER.info("Integração realizada.");
        });
    }

    private void lerArquivoSelecionado() throws IOException {
        linhasDoArquivo = ManipulacaoDeArquivoTxt.lerArquivo(this.txtCaminhoArquivo.getText());
    }
}
